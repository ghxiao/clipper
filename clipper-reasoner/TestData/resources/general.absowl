Namespace(people=<http://cohse.semanticweb.org/ontologies/people#>)
Namespace(pp=<http://cohse.semanticweb.org/ontologies/people#>)
Ontology(
/* Annotations */
//Various kinds of comments
  Annotation(<http://purl.org/dc/elements/1.1/subject> ""^^xsd:string)
 Annotation(<http://purl.org/dc/elements/1.1/creator> "Sean K. Bechhofer"^^xsd:string)
 Annotation(owl:versionInfo "1.1"^^xsd:string)
 Annotation(<http://purl.org/dc/elements/1.1/description> "Simple demonstration ontology"^^xsd:string)
 Annotation(<http://purl.org/dc/elements/1.1/title> "Mad_Cows and Englishmen"^^xsd:string)
 Annotation(<http://purl.org/dc/elements/1.1/date> "Nov 2001"^^xsd:string)
//More comments
 Class( // and comments
  people:animal complete
  annotation(rdfs:label "animal"^^xsd:string)  
  annotation(rdfs:comment "\\some strange \"\\jkh\" comment"^^xsd:string) people:animale)
 Class(people:bicycle partial 
  people:vehicle)

/* Multi
   line 
   comment */
 ObjectProperty(people:has_pet)

 Class(people:animal_lover partial 
  annotation(rdfs:comment "Someone who \"really\" likes animals"^^xsd:string)  annotation(rdfs:label "animal lover"^^xsd:string)
  restriction(people:has_pet minCardinality(3)))

 ObjectProperty(people:age range(oneOf(people:young people:elderly people:adult)))
 Class(people:cat_lover complete 
  intersectionOf(restriction(people:has_pet someValuesFrom(people:cat)) people:person))


 ObjectProperty(people:drives)
 ObjectProperty(people:eaten_by)
 ObjectProperty(people:eats Deprecated
  inverseOf(people:eaten_by)
  domain(people:animal)) ObjectProperty(people:has_child)
 ObjectProperty(people:has_colour Functional)
 ObjectProperty(people:has_parent)
 ObjectProperty(people:has_pet)
 ObjectProperty(people:likes)
 ObjectProperty(people:part_of)
 ObjectProperty(people:has_part
  inverseOf(people:part_of))
 ObjectProperty(people:works_for)
 ObjectProperty(people:sex 
  range(oneOf(people:female people:male)))
 ObjectProperty(people:has_father
  super(people:has_parent)
  range(people:man))
 ObjectProperty(people:has_mother
  range(people:woman))
	
 Datatype(people:salary)

 Datatype(people:test)

 DatatypeProperty(people:service_number
  super(people:code) Functional
  range(xsd:integer))

 Individual(people:adult
  type(owl:Thing))
 Individual(people:elderly
  type(owl:Thing))
 Individual(people:female
  type(owl:Thing))
 Individual(people:male
  type(owl:Thing))
 Individual(people:white
  type(owl:Thing))
 Individual(people:young
  type(owl:Thing))
 Individual(
  type(people:woman)
  value(people:has_father people:Zeus))
 Individual(people:fred
  value(people:has_pet people:felix))

 Individual(people:joe type(restriction(people:has_parent cardinality(2))))

 EnumeratedClass(people:testEnumerated Deprecated people:adult people:elderly)

 DisjointClasses(people:tabloid people:broadsheet)
 DisjointClasses(people:dog people:cat)

 SubPropertyOf(people:has_mother people:has_parent)
 SubPropertyOf(people:has_father people:has_parent)

 EquivalentProperties(people:has_mother people:ha_madre)

 EquivalentProperties(people:service_number people:numero_di_servizio)

 DisjointClasses(restriction(people:part_of someValuesFrom (people:plant)) restriction(people:part_of someValuesFrom (people:animal)))

 Individual(people:bart 
   type(restriction(people:service_number cardinality(2))))

 Individual(people:john
   type(restriction(people:service_number allValuesFrom(people:test))))

 Class(pp:newspaper partial unionOf(pp:broadsheet pp:tabloid) pp:publication)
 ObjectProperty(pp:is_pet_of inverseOf(pp:has_pet))
 Class(pp:pet complete restriction(pp:is_pet_of someValuesFrom(owl:Thing)))

 Individual(people:ben 
   type(restriction(people:service_number value("3"^^xsd:integer))))

 Individual(people:another
   value(people:service_number "3"^^xsd:integer))

 Individual(pp:Q123ABC type(pp:whiteThing) type(pp:van))

 Individual(people:lang
   value(people:service_number "3"@aj-h76-5kj))

 Individual(people:testLang
   value(people:service_number "3"@en))
)


